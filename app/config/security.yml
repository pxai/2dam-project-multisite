# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
 #       in_memory:
 #           memory: ~
        in_memory:
            memory:
                 # this was here when we started: 2 hardcoded users
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        our_db_provider:
            entity:
                class: ApiBundle:User
                property: username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                provider:   in_memory
                login_path: /login
                check_path: /login_check
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
                target_path_parameter: redirect_url
            logout:
                path:   logout
                target: login
    access_control:
       # require ROLE_ADMIN for /admin*
       - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       - { path: ^/admin, roles: ROLE_ADMIN }

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        ApiBundle\Entity\User:
            algorithm: sha1